[{"E:\\Projects\\react-project\\forms\\src\\index.js":"1","E:\\Projects\\react-project\\forms\\src\\App.js":"2","E:\\Projects\\react-project\\forms\\src\\components\\SimpleInput.js":"3","E:\\Projects\\react-project\\forms\\src\\hooks\\use-input.js":"4","E:\\Projects\\react-project\\forms\\src\\components\\BasicForm.js":"5"},{"size":142,"mtime":1616579686000,"results":"6","hashOfConfig":"7"},{"size":213,"mtime":1642454000086,"results":"8","hashOfConfig":"7"},{"size":758,"mtime":1642368576838,"results":"9","hashOfConfig":"7"},{"size":1727,"mtime":1642527905750,"results":"10","hashOfConfig":"7"},{"size":2660,"mtime":1654533708710,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ewiumg",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Projects\\react-project\\forms\\src\\index.js",[],["26","27"],"E:\\Projects\\react-project\\forms\\src\\App.js",["28"],"import BasicForm from './components/BasicForm';\nimport SimpleInput from './components/SimpleInput';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BasicForm/>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\Projects\\react-project\\forms\\src\\components\\SimpleInput.js",["29"],"import useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(v => v.trim() !== '')\n\n  let smh = !nameInputHasError ? 'form-control' : 'form-control invalid';\n\n  return (\n    <form>\n      <div className={smh}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' \n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}/>\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n","E:\\Projects\\react-project\\forms\\src\\hooks\\use-input.js",["30"],"import { useState, useReducer } from \"react\"\r\n\r\nconst initialInput = {\r\n    value: '',\r\n    isTouched: false,\r\n};\r\n\r\nconst inputStateReducer = (state, action) => {\r\n    if(action.type === 'INPUT'){\r\n        return {value : action.value, isTouched : state.isTouched};\r\n    }\r\n    if(action.type === 'BLUR'){\r\n        return{value: state.value, isTouched: true};\r\n    }\r\n    if(action.type === 'RESET'){\r\n        return{value: '', isTouched: false};\r\n    }\r\n    return initialInput;\r\n}\r\n\r\n\r\n\r\nconst useInput = (fun) => {\r\n    // const [enteredValue, setEntertedValue] = useState('');\r\n    // const [isTouched, setIsTouched] = useState(false);\r\n\r\n    // const valueIsValid = fun(enteredValue);\r\n    // const hasError = !valueIsValid && isTouched;\r\n    \r\n    // const valueChangeHandler = (event) => {\r\n    //     setEntertedValue(event.target.value);\r\n    // }\r\n\r\n    // const inputBlurHandler = (event) => {\r\n    //     setIsTouched(true);\r\n    // }\r\n\r\n    // const reset = () => {\r\n    //     setEntertedValue('');\r\n    // }\r\n\r\n    const [inputState, dispatch] = useReducer(\r\n        inputStateReducer,\r\n        initialInput\r\n    );\r\n\r\n    const valueIsValid = fun(inputState.value);\r\n    const hasError = !valueIsValid && inputState.isTouched;\r\n\r\n    const valueChangeHandler = (event) => {\r\n        dispatch({type:'INPUT', value:event.target.value});\r\n    }\r\n\r\n    const inputBlurHandler = (event) => {\r\n        dispatch({type:'BLUR'});\r\n    }\r\n\r\n    const reset = () => {\r\n        dispatch({type:'RESET'});\r\n    }\r\n\r\n    return{\r\n        value: inputState.value,\r\n        isValid: valueIsValid,\r\n        hasError,\r\n        valueChangeHandler,\r\n        inputBlurHandler,\r\n        reset\r\n    };\r\n\r\n}\r\n\r\nexport default useInput;","E:\\Projects\\react-project\\forms\\src\\components\\BasicForm.js",["31","32","33","34","35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":19},{"ruleId":"41","severity":1,"message":"45","line":7,"column":14,"nodeType":"43","messageId":"44","endLine":7,"endColumn":32},{"ruleId":"41","severity":1,"message":"46","line":1,"column":10,"nodeType":"43","messageId":"44","endLine":1,"endColumn":18},{"ruleId":"41","severity":1,"message":"47","line":10,"column":14,"nodeType":"43","messageId":"44","endLine":10,"endColumn":37},{"ruleId":"41","severity":1,"message":"48","line":14,"column":12,"nodeType":"43","messageId":"44","endLine":14,"endColumn":26},{"ruleId":"41","severity":1,"message":"49","line":19,"column":14,"nodeType":"43","messageId":"44","endLine":19,"endColumn":36},{"ruleId":"41","severity":1,"message":"50","line":23,"column":12,"nodeType":"43","messageId":"44","endLine":23,"endColumn":25},{"ruleId":"41","severity":1,"message":"51","line":28,"column":14,"nodeType":"43","messageId":"44","endLine":28,"endColumn":33},{"ruleId":"41","severity":1,"message":"52","line":32,"column":12,"nodeType":"43","messageId":"44","endLine":32,"endColumn":22},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'SimpleInput' is defined but never used.","Identifier","unusedVar","'enteredNameIsValid' is assigned a value but never used.","'useState' is defined but never used.","'enteredFirstNameIsValid' is assigned a value but never used.","'resetFirstName' is assigned a value but never used.","'enteredLastNameIsValid' is assigned a value but never used.","'resetLastName' is assigned a value but never used.","'enteredEmailIsValid' is assigned a value but never used.","'resetEmail' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]